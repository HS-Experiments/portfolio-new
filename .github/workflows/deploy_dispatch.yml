# This is a basic workflow to help you get started with Actions

name: Deploy On Repo Dispatch

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  repository_dispatch:
    types: [merge-content]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  mergeContent:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Clone submodules
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.PAT_REPO_HOOK_TOKEN }}
        submodules: true
    - name: Update submodules
      run: |
        git submodule update --remote          
   # - name: Update submodules ref
   #   run: |
     #   git config --global user.email "dpnminh@gmail.com"
      #  git config --global user.name "My GitHub Actions Bot"
      #  git submodule update --remote --recursive
      # git submodule foreach git pull origin master --allow-unrelated-histories
    
        
   
    #- name: Pull content
    #  run: |        
    #    git clean -n
     # git add .
    

    - name: Update submodule index
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        # Required
        commit_message: Update submodule        

        # Optional commit user and author settings
        commit_user_name: My GitHub Actions Bot
        commit_user_email: dpnminh@gmail.com # to change
        commit_author: My GitHub Actions Bot <actions@github.com>
    # - name: Update submodules path
    #  uses: actions/checkout@v2
    #  with:
    #    token: ${{ secrets.PAT_REPO_HOOK_TOKEN }}
    #    submodules: recursive      
    - name: Install dependencies
      run: yarn
    
    - name: Build
      run: yarn build
    
    - name: Deploy
      uses: amondnet/vercel-action@v19.0.1+1
      with:
        vercel-token: ${{ secrets.PAT_ZEIT_DEPLOY }} # Required
        vercel-args: '--prod' #Optional
        vercel-org-id: ${{ secrets.ZEIT_ORG_ID}}  #Required
        vercel-project-id: ${{ secrets.ZEIT_PROJECT_ID}} #Required 
